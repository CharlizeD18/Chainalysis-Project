{"ast":null,"code":"var _jsxFileName = \"/Users/charlizedang/Desktop/Chainalysis/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n/* \n  Get the recommended exchange to buy from based on which one is lower.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getBuyRecommendation(coinBasePrice, krakenPrice) {\n  if (coinBasePrice < krakenPrice) {\n    return \"Coinbase\";\n  } else {\n    return \"Kraken\";\n  }\n}\n\n;\n/* \n  Get the recommended exchange to sell on based on which one is higher.\n*/\n\nfunction getSellRecommendation(coinBasePrice, krakenPrice) {\n  if (coinBasePrice > krakenPrice) {\n    return \"Coinbase\";\n  } else {\n    return \"Kraken\";\n  }\n}\n\nfunction App() {\n  _s();\n\n  /* \n    Each state is a 2 element array where the first element contains the buy price\n    and the second element contains the sell price.\n   */\n  const [coinbasePrice, setCoinbasePrice] = useState({});\n  const [krakenPrice, setKrakenPrice] = useState({});\n  /*\n  Get the buy and sell prices when the page is refreshed from the backend.\n  */\n\n  useEffect(() => {\n    // GET request using axios inside useEffect React hook\n    axios.get('http://localhost:3500/coinbase').then(response => setCoinbasePrice(response.data));\n    axios.get('http://localhost:3500/kraken').then(response => setKrakenPrice(response.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-price-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-coinbase\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Coinbase Prices:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bitcoin Buy Price: $\", coinbasePrice[\"bitcoin_buy\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bitcoin Sell Price: $\", coinbasePrice[\"bitcoin_sell\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Ethereum Buy Price: $\", coinbasePrice[\"eth_buy\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Ethereum Sell Price: $\", coinbasePrice[\"eth_sell\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-kraken\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Kraken Prices:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bitcoin Buy Price: $\", krakenPrice[\"bitcoin_buy\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Bitcoin Sell Price: $\", krakenPrice[\"bitcoin_sell\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Ethereum Buy Price: $\", krakenPrice[\"eth_buy\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Ethereum Sell Price: $\", krakenPrice[\"eth_sell\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-recommendations\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Buy/Sell Recommendations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Buy Bitcoin: \", getBuyRecommendation(coinbasePrice[\"bitcoin_buy\"], krakenPrice[\"bitcoin_buy\"])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Sell Bitcoin: \", getSellRecommendation(coinbasePrice[\"bitcoin_sell\"], krakenPrice[\"bitcoin_sell\"])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Buy Ethereum: \", getBuyRecommendation(coinbasePrice[\"eth_buy\"], krakenPrice[\"eth_buy\"])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Sell Ethereum: \", getSellRecommendation(coinbasePrice[\"eth_sell\"], krakenPrice[\"eth_sell\"])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ennFZp67oY1pXnxPV9jO67qHlmo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/charlizedang/Desktop/Chainalysis/client/src/App.js"],"names":["React","useState","useEffect","axios","getBuyRecommendation","coinBasePrice","krakenPrice","getSellRecommendation","App","coinbasePrice","setCoinbasePrice","setKrakenPrice","get","then","response","data"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;;;;AACA,SAASC,oBAAT,CAA8BC,aAA9B,EAA6CC,WAA7C,EAA0D;AACxD,MAAID,aAAa,GAAGC,WAApB,EAAiC;AAC/B,WAAO,UAAP;AACD,GAFD,MAEO;AACL,WAAO,QAAP;AACD;AACF;;AAAA;AAED;AACA;AACA;;AACA,SAASC,qBAAT,CAA+BF,aAA/B,EAA8CC,WAA9C,EAA2D;AACzD,MAAID,aAAa,GAAGC,WAApB,EAAiC;AAC/B,WAAO,UAAP;AACD,GAFD,MAEO;AACL,WAAO,QAAP;AACD;AACF;;AAED,SAASE,GAAT,GAAe;AAAA;;AACb;AACF;AACA;AACA;AACE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACK,WAAD,EAAcK,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AAEA;AACF;AACA;;AACEC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,KAAK,CAACS,GAAN,CAAU,gCAAV,EACKC,IADL,CACUC,QAAQ,IAAIJ,gBAAgB,CAACI,QAAQ,CAACC,IAAV,CADtC;AAGAZ,IAAAA,KAAK,CAACS,GAAN,CAAU,8BAAV,EACKC,IADL,CACUC,QAAQ,IAAIH,cAAc,CAACG,QAAQ,CAACC,IAAV,CADpC;AAED,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,+CAAyBN,aAAa,CAAC,aAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,gDAA0BA,aAAa,CAAC,cAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,gDAA0BA,aAAa,CAAC,SAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,iDAA2BA,aAAa,CAAC,UAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,+CAAyBH,WAAW,CAAC,aAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,gDAA0BA,WAAW,CAAC,cAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,gDAA0BA,WAAW,CAAC,SAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,iDAA2BA,WAAW,CAAC,UAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,sCAAkBF,oBAAoB,CAACK,aAAa,CAAC,aAAD,CAAd,EAA+BH,WAAW,CAAC,aAAD,CAA1C,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,uCAAmBC,qBAAqB,CAACE,aAAa,CAAC,cAAD,CAAd,EAAgCH,WAAW,CAAC,cAAD,CAA3C,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,uCAAmBF,oBAAoB,CAACK,aAAa,CAAC,SAAD,CAAd,EAA2BH,WAAW,CAAC,SAAD,CAAtC,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,wCAAoBC,qBAAqB,CAACE,aAAa,CAAC,UAAD,CAAd,EAA4BH,WAAW,CAAC,UAAD,CAAvC,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAjDQE,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n/* \n  Get the recommended exchange to buy from based on which one is lower.\n*/\nfunction getBuyRecommendation(coinBasePrice, krakenPrice) {\n  if (coinBasePrice < krakenPrice) {\n    return \"Coinbase\"\n  } else {\n    return \"Kraken\"\n  }\n};\n\n/* \n  Get the recommended exchange to sell on based on which one is higher.\n*/\nfunction getSellRecommendation(coinBasePrice, krakenPrice) {\n  if (coinBasePrice > krakenPrice) {\n    return \"Coinbase\"\n  } else {\n    return \"Kraken\"\n  } \n}\n\nfunction App() {\n  /* \n    Each state is a 2 element array where the first element contains the buy price\n    and the second element contains the sell price.\n   */\n  const [coinbasePrice, setCoinbasePrice] = useState({});\n  const [krakenPrice, setKrakenPrice] = useState({});\n\n  /*\n  Get the buy and sell prices when the page is refreshed from the backend.\n*/\n  useEffect(() => {\n    // GET request using axios inside useEffect React hook\n    axios.get('http://localhost:3500/coinbase')\n        .then(response => setCoinbasePrice(response.data));\n\n    axios.get('http://localhost:3500/kraken')\n        .then(response => setKrakenPrice(response.data));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"App-price-display\">\n          <div className=\"App-coinbase\">\n            <h1>Coinbase Prices:</h1>\n            <h3>Bitcoin Buy Price: ${coinbasePrice[\"bitcoin_buy\"]}</h3>\n            <h3>Bitcoin Sell Price: ${coinbasePrice[\"bitcoin_sell\"]}</h3>\n            <h3>Ethereum Buy Price: ${coinbasePrice[\"eth_buy\"]}</h3>\n            <h3>Ethereum Sell Price: ${coinbasePrice[\"eth_sell\"]}</h3>   \n          </div>\n          <div className=\"App-kraken\">\n            <h1>Kraken Prices:</h1>\n            <h3>Bitcoin Buy Price: ${krakenPrice[\"bitcoin_buy\"]}</h3>\n            <h3>Bitcoin Sell Price: ${krakenPrice[\"bitcoin_sell\"]}</h3>\n            <h3>Ethereum Buy Price: ${krakenPrice[\"eth_buy\"]}</h3>\n            <h3>Ethereum Sell Price: ${krakenPrice[\"eth_sell\"]}</h3> \n          </div>\n        </div>\n        <div className=\"App-recommendations\">\n          <h1>Buy/Sell Recommendations:</h1>\n          <h3>Buy Bitcoin: {getBuyRecommendation(coinbasePrice[\"bitcoin_buy\"], krakenPrice[\"bitcoin_buy\"])}</h3>\n          <h3>Sell Bitcoin: {getSellRecommendation(coinbasePrice[\"bitcoin_sell\"], krakenPrice[\"bitcoin_sell\"])}</h3>\n          <h3>Buy Ethereum: {getBuyRecommendation(coinbasePrice[\"eth_buy\"], krakenPrice[\"eth_buy\"])}</h3>\n          <h3>Sell Ethereum: {getSellRecommendation(coinbasePrice[\"eth_sell\"], krakenPrice[\"eth_sell\"])}</h3>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}